name: MiniC CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  format-check:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v4
      - name: Install clang-format
        run: |
          sudo apt update --yes
          sudo apt install --yes clang-format
      - name: Run clang-format
        run: |
          clang-format -style=file -i --dry-run --Werror $(find . \( -name "*.cpp" -o -name "*.cc" -o -name "*.cxx" -o -name "*.c" -o -name "*.h" -o -name "*.hpp" -o -name "*.hxx" -o -name "*.inl" \) -not -path "*/build*/*")

  build-gcc14:
    runs-on: ubuntu-22.04
    container: gcc:14
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apt update --yes
          apt install --yes cmake clang-tidy
      - name: Build
        run: |
          mkdir build-gcc14
          cd build-gcc14
          cmake -DBUILD_TESTS=ON ../
          make
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-gcc14
          path: build-gcc14/

  test-gcc14:
    runs-on: ubuntu-22.04
    container: gcc:14
    needs: build-gcc14
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-gcc14
          path: build-gcc14
      - name: Run unit tests
        run: |
          chmod +x build-gcc14/tests/minic_tests
          cd build-gcc14
          ./tests/minic_tests

  build-gcc15:
    runs-on: ubuntu-22.04
    container: gcc:15
    steps:
      - uses: actions/checkout@v4
      - name: Install dependencies
        run: |
          apt update --yes
          apt install --yes cmake clang-tidy
      - name: Build
        run: |
          mkdir build-gcc15
          cd build-gcc15
          cmake -DBUILD_TESTS=ON ../
          make
      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        with:
          name: build-gcc15
          path: build-gcc15/

  test-gcc15:
    runs-on: ubuntu-22.04
    container: gcc:15
    needs: build-gcc15
    steps:
      - uses: actions/checkout@v4
      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: build-gcc15
          path: build-gcc15
      - name: Run unit tests
        run: |
          chmod +x build-gcc15/tests/tests
          cd build-gcc15
          ./tests/minic_tests
